// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static class MVC
{
    static readonly AdminClass s_Admin = new AdminClass();
    public static AdminClass Admin { get { return s_Admin; } }
    public static Padel.Web.Mvc.Controllers.ContactoController Contacto = new Padel.Web.Mvc.Controllers.T4MVC_ContactoController();
    public static Padel.Web.Mvc.Controllers.EquiposController Equipos = new Padel.Web.Mvc.Controllers.T4MVC_EquiposController();
    public static Padel.Web.Mvc.Controllers.GaleriasController Galerias = new Padel.Web.Mvc.Controllers.T4MVC_GaleriasController();
    public static Padel.Web.Mvc.Controllers.HomeController Home = new Padel.Web.Mvc.Controllers.T4MVC_HomeController();
    public static Padel.Web.Mvc.Controllers.JugadorController Jugador = new Padel.Web.Mvc.Controllers.T4MVC_JugadorController();
    public static Padel.Web.Mvc.Controllers.NormasController Normas = new Padel.Web.Mvc.Controllers.T4MVC_NormasController();
    public static Padel.Web.Mvc.Controllers.PremiosController Premios = new Padel.Web.Mvc.Controllers.T4MVC_PremiosController();
    public static Padel.Web.Mvc.Controllers.ResultadosController Resultados = new Padel.Web.Mvc.Controllers.T4MVC_ResultadosController();
    public static Padel.Web.Mvc.Controllers.TorneosController Torneos = new Padel.Web.Mvc.Controllers.T4MVC_TorneosController();
    public static Padel.Web.Mvc.Controllers.UsuariosController Usuarios = new Padel.Web.Mvc.Controllers.T4MVC_UsuariosController();
    public static T4MVC.EmailsController Emails = new T4MVC.EmailsController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class AdminClass
    {
        public readonly string Name = "Admin";
        public Padel.Web.Mvc.Areas.Admin.Controllers.HomeAdminController HomeAdmin = new Padel.Web.Mvc.Areas.Admin.Controllers.T4MVC_HomeAdminController();
        public Padel.Web.Mvc.Areas.Admin.Controllers.JugadoresController Jugadores = new Padel.Web.Mvc.Areas.Admin.Controllers.T4MVC_JugadoresController();
        public Padel.Web.Mvc.Areas.Admin.Controllers.TorneosController Torneos = new Padel.Web.Mvc.Areas.Admin.Controllers.T4MVC_TorneosController();
        public T4MVC.Admin.EmailsController Emails = new T4MVC.Admin.EmailsController();
        public T4MVC.Admin.SharedController Shared = new T4MVC.Admin.SharedController();
    }
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_PartialViewResult : System.Web.Mvc.PartialViewResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_PartialViewResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_JsonResult : System.Web.Mvc.JsonResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_JsonResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string additional_methods_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/additional-methods.min.js") ? Url("additional-methods.min.js") : Url("additional-methods.js");
        public static readonly string additional_methods_min_js = Url("additional-methods.min.js");
        public static readonly string angular_bootstrap_prettify_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-bootstrap-prettify.min.js") ? Url("angular-bootstrap-prettify.min.js") : Url("angular-bootstrap-prettify.js");
        public static readonly string angular_bootstrap_prettify_min_js = Url("angular-bootstrap-prettify.min.js");
        public static readonly string angular_bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-bootstrap.min.js") ? Url("angular-bootstrap.min.js") : Url("angular-bootstrap.js");
        public static readonly string angular_bootstrap_min_js = Url("angular-bootstrap.min.js");
        public static readonly string angular_cookies_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-cookies.min.js") ? Url("angular-cookies.min.js") : Url("angular-cookies.js");
        public static readonly string angular_cookies_min_js = Url("angular-cookies.min.js");
        public static readonly string angular_loader_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-loader.min.js") ? Url("angular-loader.min.js") : Url("angular-loader.js");
        public static readonly string angular_loader_min_js = Url("angular-loader.min.js");
        public static readonly string angular_mocks_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-mocks.min.js") ? Url("angular-mocks.min.js") : Url("angular-mocks.js");
        public static readonly string angular_resource_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-resource.min.js") ? Url("angular-resource.min.js") : Url("angular-resource.js");
        public static readonly string angular_resource_min_js = Url("angular-resource.min.js");
        public static readonly string angular_sanitize_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-sanitize.min.js") ? Url("angular-sanitize.min.js") : Url("angular-sanitize.js");
        public static readonly string angular_sanitize_min_js = Url("angular-sanitize.min.js");
        public static readonly string angular_scenario_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-scenario.min.js") ? Url("angular-scenario.min.js") : Url("angular-scenario.js");
        public static readonly string angular_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular.min.js") ? Url("angular.min.js") : Url("angular.js");
        public static readonly string angular_min_js = Url("angular.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class angularjs {
            private const string URLPATH = "~/Scripts/angularjs";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string angular_route_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-route.min.js") ? Url("angular-route.min.js") : Url("angular-route.js");
            public static readonly string angular_route_min_js = Url("angular-route.min.js");
            public static readonly string angular_route_min_js_map = Url("angular-route.min.js.map");
            public static readonly string angular_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular.min.js") ? Url("angular.min.js") : Url("angular.js");
            public static readonly string angular_min_js = Url("angular.min.js");
            public static readonly string angular_min_js_map = Url("angular.min.js.map");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class grid {
                private const string URLPATH = "~/Scripts/angularjs/grid";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string ng_grid_2_0_7_min_js = Url("ng-grid-2.0.7.min.js");
                public static readonly string ng_grid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ng-grid.min.js") ? Url("ng-grid.min.js") : Url("ng-grid.js");
                public static readonly string ng_grid_min_js = Url("ng-grid.min.js");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class bootstrap {
            private const string URLPATH = "~/Scripts/bootstrap";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string bootstrap_validation_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-validation.min.js") ? Url("bootstrap-validation.min.js") : Url("bootstrap-validation.js");
            public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
            public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
            public static readonly string holder_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/holder.min.js") ? Url("holder.min.js") : Url("holder.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class fuelux {
            private const string URLPATH = "~/Scripts/fuelux";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string wizard_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wizard.min.js") ? Url("wizard.min.js") : Url("wizard.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class i18n {
            private const string URLPATH = "~/Scripts/i18n";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string angular_locale_af_na_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_af-na.min.js") ? Url("angular-locale_af-na.min.js") : Url("angular-locale_af-na.js");
            public static readonly string angular_locale_af_za_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_af-za.min.js") ? Url("angular-locale_af-za.min.js") : Url("angular-locale_af-za.js");
            public static readonly string angular_locale_af_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_af.min.js") ? Url("angular-locale_af.min.js") : Url("angular-locale_af.js");
            public static readonly string angular_locale_am_et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_am-et.min.js") ? Url("angular-locale_am-et.min.js") : Url("angular-locale_am-et.js");
            public static readonly string angular_locale_am_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_am.min.js") ? Url("angular-locale_am.min.js") : Url("angular-locale_am.js");
            public static readonly string angular_locale_ar_001_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ar-001.min.js") ? Url("angular-locale_ar-001.min.js") : Url("angular-locale_ar-001.js");
            public static readonly string angular_locale_ar_ae_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ar-ae.min.js") ? Url("angular-locale_ar-ae.min.js") : Url("angular-locale_ar-ae.js");
            public static readonly string angular_locale_ar_bh_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ar-bh.min.js") ? Url("angular-locale_ar-bh.min.js") : Url("angular-locale_ar-bh.js");
            public static readonly string angular_locale_ar_dz_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ar-dz.min.js") ? Url("angular-locale_ar-dz.min.js") : Url("angular-locale_ar-dz.js");
            public static readonly string angular_locale_ar_eg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ar-eg.min.js") ? Url("angular-locale_ar-eg.min.js") : Url("angular-locale_ar-eg.js");
            public static readonly string angular_locale_ar_iq_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ar-iq.min.js") ? Url("angular-locale_ar-iq.min.js") : Url("angular-locale_ar-iq.js");
            public static readonly string angular_locale_ar_jo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ar-jo.min.js") ? Url("angular-locale_ar-jo.min.js") : Url("angular-locale_ar-jo.js");
            public static readonly string angular_locale_ar_kw_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ar-kw.min.js") ? Url("angular-locale_ar-kw.min.js") : Url("angular-locale_ar-kw.js");
            public static readonly string angular_locale_ar_lb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ar-lb.min.js") ? Url("angular-locale_ar-lb.min.js") : Url("angular-locale_ar-lb.js");
            public static readonly string angular_locale_ar_ly_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ar-ly.min.js") ? Url("angular-locale_ar-ly.min.js") : Url("angular-locale_ar-ly.js");
            public static readonly string angular_locale_ar_ma_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ar-ma.min.js") ? Url("angular-locale_ar-ma.min.js") : Url("angular-locale_ar-ma.js");
            public static readonly string angular_locale_ar_om_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ar-om.min.js") ? Url("angular-locale_ar-om.min.js") : Url("angular-locale_ar-om.js");
            public static readonly string angular_locale_ar_qa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ar-qa.min.js") ? Url("angular-locale_ar-qa.min.js") : Url("angular-locale_ar-qa.js");
            public static readonly string angular_locale_ar_sa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ar-sa.min.js") ? Url("angular-locale_ar-sa.min.js") : Url("angular-locale_ar-sa.js");
            public static readonly string angular_locale_ar_sd_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ar-sd.min.js") ? Url("angular-locale_ar-sd.min.js") : Url("angular-locale_ar-sd.js");
            public static readonly string angular_locale_ar_sy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ar-sy.min.js") ? Url("angular-locale_ar-sy.min.js") : Url("angular-locale_ar-sy.js");
            public static readonly string angular_locale_ar_tn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ar-tn.min.js") ? Url("angular-locale_ar-tn.min.js") : Url("angular-locale_ar-tn.js");
            public static readonly string angular_locale_ar_ye_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ar-ye.min.js") ? Url("angular-locale_ar-ye.min.js") : Url("angular-locale_ar-ye.js");
            public static readonly string angular_locale_ar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ar.min.js") ? Url("angular-locale_ar.min.js") : Url("angular-locale_ar.js");
            public static readonly string angular_locale_bg_bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_bg-bg.min.js") ? Url("angular-locale_bg-bg.min.js") : Url("angular-locale_bg-bg.js");
            public static readonly string angular_locale_bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_bg.min.js") ? Url("angular-locale_bg.min.js") : Url("angular-locale_bg.js");
            public static readonly string angular_locale_bn_bd_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_bn-bd.min.js") ? Url("angular-locale_bn-bd.min.js") : Url("angular-locale_bn-bd.js");
            public static readonly string angular_locale_bn_in_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_bn-in.min.js") ? Url("angular-locale_bn-in.min.js") : Url("angular-locale_bn-in.js");
            public static readonly string angular_locale_bn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_bn.min.js") ? Url("angular-locale_bn.min.js") : Url("angular-locale_bn.js");
            public static readonly string angular_locale_ca_ad_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ca-ad.min.js") ? Url("angular-locale_ca-ad.min.js") : Url("angular-locale_ca-ad.js");
            public static readonly string angular_locale_ca_es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ca-es.min.js") ? Url("angular-locale_ca-es.min.js") : Url("angular-locale_ca-es.js");
            public static readonly string angular_locale_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ca.min.js") ? Url("angular-locale_ca.min.js") : Url("angular-locale_ca.js");
            public static readonly string angular_locale_chr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_chr.min.js") ? Url("angular-locale_chr.min.js") : Url("angular-locale_chr.js");
            public static readonly string angular_locale_cs_cz_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_cs-cz.min.js") ? Url("angular-locale_cs-cz.min.js") : Url("angular-locale_cs-cz.js");
            public static readonly string angular_locale_cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_cs.min.js") ? Url("angular-locale_cs.min.js") : Url("angular-locale_cs.js");
            public static readonly string angular_locale_cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_cy.min.js") ? Url("angular-locale_cy.min.js") : Url("angular-locale_cy.js");
            public static readonly string angular_locale_da_dk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_da-dk.min.js") ? Url("angular-locale_da-dk.min.js") : Url("angular-locale_da-dk.js");
            public static readonly string angular_locale_da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_da.min.js") ? Url("angular-locale_da.min.js") : Url("angular-locale_da.js");
            public static readonly string angular_locale_de_at_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_de-at.min.js") ? Url("angular-locale_de-at.min.js") : Url("angular-locale_de-at.js");
            public static readonly string angular_locale_de_be_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_de-be.min.js") ? Url("angular-locale_de-be.min.js") : Url("angular-locale_de-be.js");
            public static readonly string angular_locale_de_ch_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_de-ch.min.js") ? Url("angular-locale_de-ch.min.js") : Url("angular-locale_de-ch.js");
            public static readonly string angular_locale_de_de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_de-de.min.js") ? Url("angular-locale_de-de.min.js") : Url("angular-locale_de-de.js");
            public static readonly string angular_locale_de_li_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_de-li.min.js") ? Url("angular-locale_de-li.min.js") : Url("angular-locale_de-li.js");
            public static readonly string angular_locale_de_lu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_de-lu.min.js") ? Url("angular-locale_de-lu.min.js") : Url("angular-locale_de-lu.js");
            public static readonly string angular_locale_de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_de.min.js") ? Url("angular-locale_de.min.js") : Url("angular-locale_de.js");
            public static readonly string angular_locale_el_cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_el-cy.min.js") ? Url("angular-locale_el-cy.min.js") : Url("angular-locale_el-cy.js");
            public static readonly string angular_locale_el_gr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_el-gr.min.js") ? Url("angular-locale_el-gr.min.js") : Url("angular-locale_el-gr.js");
            public static readonly string angular_locale_el_polyton_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_el-polyton.min.js") ? Url("angular-locale_el-polyton.min.js") : Url("angular-locale_el-polyton.js");
            public static readonly string angular_locale_el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_el.min.js") ? Url("angular-locale_el.min.js") : Url("angular-locale_el.js");
            public static readonly string angular_locale_en_as_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-as.min.js") ? Url("angular-locale_en-as.min.js") : Url("angular-locale_en-as.js");
            public static readonly string angular_locale_en_au_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-au.min.js") ? Url("angular-locale_en-au.min.js") : Url("angular-locale_en-au.js");
            public static readonly string angular_locale_en_bb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-bb.min.js") ? Url("angular-locale_en-bb.min.js") : Url("angular-locale_en-bb.js");
            public static readonly string angular_locale_en_be_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-be.min.js") ? Url("angular-locale_en-be.min.js") : Url("angular-locale_en-be.js");
            public static readonly string angular_locale_en_bm_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-bm.min.js") ? Url("angular-locale_en-bm.min.js") : Url("angular-locale_en-bm.js");
            public static readonly string angular_locale_en_bw_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-bw.min.js") ? Url("angular-locale_en-bw.min.js") : Url("angular-locale_en-bw.js");
            public static readonly string angular_locale_en_bz_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-bz.min.js") ? Url("angular-locale_en-bz.min.js") : Url("angular-locale_en-bz.js");
            public static readonly string angular_locale_en_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-ca.min.js") ? Url("angular-locale_en-ca.min.js") : Url("angular-locale_en-ca.js");
            public static readonly string angular_locale_en_dsrt_us_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-dsrt-us.min.js") ? Url("angular-locale_en-dsrt-us.min.js") : Url("angular-locale_en-dsrt-us.js");
            public static readonly string angular_locale_en_dsrt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-dsrt.min.js") ? Url("angular-locale_en-dsrt.min.js") : Url("angular-locale_en-dsrt.js");
            public static readonly string angular_locale_en_fm_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-fm.min.js") ? Url("angular-locale_en-fm.min.js") : Url("angular-locale_en-fm.js");
            public static readonly string angular_locale_en_gb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-gb.min.js") ? Url("angular-locale_en-gb.min.js") : Url("angular-locale_en-gb.js");
            public static readonly string angular_locale_en_gu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-gu.min.js") ? Url("angular-locale_en-gu.min.js") : Url("angular-locale_en-gu.js");
            public static readonly string angular_locale_en_gy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-gy.min.js") ? Url("angular-locale_en-gy.min.js") : Url("angular-locale_en-gy.js");
            public static readonly string angular_locale_en_hk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-hk.min.js") ? Url("angular-locale_en-hk.min.js") : Url("angular-locale_en-hk.js");
            public static readonly string angular_locale_en_ie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-ie.min.js") ? Url("angular-locale_en-ie.min.js") : Url("angular-locale_en-ie.js");
            public static readonly string angular_locale_en_in_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-in.min.js") ? Url("angular-locale_en-in.min.js") : Url("angular-locale_en-in.js");
            public static readonly string angular_locale_en_iso_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-iso.min.js") ? Url("angular-locale_en-iso.min.js") : Url("angular-locale_en-iso.js");
            public static readonly string angular_locale_en_jm_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-jm.min.js") ? Url("angular-locale_en-jm.min.js") : Url("angular-locale_en-jm.js");
            public static readonly string angular_locale_en_mh_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-mh.min.js") ? Url("angular-locale_en-mh.min.js") : Url("angular-locale_en-mh.js");
            public static readonly string angular_locale_en_mp_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-mp.min.js") ? Url("angular-locale_en-mp.min.js") : Url("angular-locale_en-mp.js");
            public static readonly string angular_locale_en_mt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-mt.min.js") ? Url("angular-locale_en-mt.min.js") : Url("angular-locale_en-mt.js");
            public static readonly string angular_locale_en_mu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-mu.min.js") ? Url("angular-locale_en-mu.min.js") : Url("angular-locale_en-mu.js");
            public static readonly string angular_locale_en_na_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-na.min.js") ? Url("angular-locale_en-na.min.js") : Url("angular-locale_en-na.js");
            public static readonly string angular_locale_en_nz_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-nz.min.js") ? Url("angular-locale_en-nz.min.js") : Url("angular-locale_en-nz.js");
            public static readonly string angular_locale_en_ph_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-ph.min.js") ? Url("angular-locale_en-ph.min.js") : Url("angular-locale_en-ph.js");
            public static readonly string angular_locale_en_pk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-pk.min.js") ? Url("angular-locale_en-pk.min.js") : Url("angular-locale_en-pk.js");
            public static readonly string angular_locale_en_pr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-pr.min.js") ? Url("angular-locale_en-pr.min.js") : Url("angular-locale_en-pr.js");
            public static readonly string angular_locale_en_pw_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-pw.min.js") ? Url("angular-locale_en-pw.min.js") : Url("angular-locale_en-pw.js");
            public static readonly string angular_locale_en_sg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-sg.min.js") ? Url("angular-locale_en-sg.min.js") : Url("angular-locale_en-sg.js");
            public static readonly string angular_locale_en_tc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-tc.min.js") ? Url("angular-locale_en-tc.min.js") : Url("angular-locale_en-tc.js");
            public static readonly string angular_locale_en_tt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-tt.min.js") ? Url("angular-locale_en-tt.min.js") : Url("angular-locale_en-tt.js");
            public static readonly string angular_locale_en_um_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-um.min.js") ? Url("angular-locale_en-um.min.js") : Url("angular-locale_en-um.js");
            public static readonly string angular_locale_en_us_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-us.min.js") ? Url("angular-locale_en-us.min.js") : Url("angular-locale_en-us.js");
            public static readonly string angular_locale_en_vg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-vg.min.js") ? Url("angular-locale_en-vg.min.js") : Url("angular-locale_en-vg.js");
            public static readonly string angular_locale_en_vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-vi.min.js") ? Url("angular-locale_en-vi.min.js") : Url("angular-locale_en-vi.js");
            public static readonly string angular_locale_en_za_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-za.min.js") ? Url("angular-locale_en-za.min.js") : Url("angular-locale_en-za.js");
            public static readonly string angular_locale_en_zw_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-zw.min.js") ? Url("angular-locale_en-zw.min.js") : Url("angular-locale_en-zw.js");
            public static readonly string angular_locale_en_zz_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en-zz.min.js") ? Url("angular-locale_en-zz.min.js") : Url("angular-locale_en-zz.js");
            public static readonly string angular_locale_en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_en.min.js") ? Url("angular-locale_en.min.js") : Url("angular-locale_en.js");
            public static readonly string angular_locale_es_419_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_es-419.min.js") ? Url("angular-locale_es-419.min.js") : Url("angular-locale_es-419.js");
            public static readonly string angular_locale_es_ar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_es-ar.min.js") ? Url("angular-locale_es-ar.min.js") : Url("angular-locale_es-ar.js");
            public static readonly string angular_locale_es_bo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_es-bo.min.js") ? Url("angular-locale_es-bo.min.js") : Url("angular-locale_es-bo.js");
            public static readonly string angular_locale_es_cl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_es-cl.min.js") ? Url("angular-locale_es-cl.min.js") : Url("angular-locale_es-cl.js");
            public static readonly string angular_locale_es_co_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_es-co.min.js") ? Url("angular-locale_es-co.min.js") : Url("angular-locale_es-co.js");
            public static readonly string angular_locale_es_cr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_es-cr.min.js") ? Url("angular-locale_es-cr.min.js") : Url("angular-locale_es-cr.js");
            public static readonly string angular_locale_es_do_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_es-do.min.js") ? Url("angular-locale_es-do.min.js") : Url("angular-locale_es-do.js");
            public static readonly string angular_locale_es_ea_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_es-ea.min.js") ? Url("angular-locale_es-ea.min.js") : Url("angular-locale_es-ea.js");
            public static readonly string angular_locale_es_ec_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_es-ec.min.js") ? Url("angular-locale_es-ec.min.js") : Url("angular-locale_es-ec.js");
            public static readonly string angular_locale_es_es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_es-es.min.js") ? Url("angular-locale_es-es.min.js") : Url("angular-locale_es-es.js");
            public static readonly string angular_locale_es_gq_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_es-gq.min.js") ? Url("angular-locale_es-gq.min.js") : Url("angular-locale_es-gq.js");
            public static readonly string angular_locale_es_gt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_es-gt.min.js") ? Url("angular-locale_es-gt.min.js") : Url("angular-locale_es-gt.js");
            public static readonly string angular_locale_es_hn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_es-hn.min.js") ? Url("angular-locale_es-hn.min.js") : Url("angular-locale_es-hn.js");
            public static readonly string angular_locale_es_ic_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_es-ic.min.js") ? Url("angular-locale_es-ic.min.js") : Url("angular-locale_es-ic.js");
            public static readonly string angular_locale_es_mx_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_es-mx.min.js") ? Url("angular-locale_es-mx.min.js") : Url("angular-locale_es-mx.js");
            public static readonly string angular_locale_es_ni_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_es-ni.min.js") ? Url("angular-locale_es-ni.min.js") : Url("angular-locale_es-ni.js");
            public static readonly string angular_locale_es_pa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_es-pa.min.js") ? Url("angular-locale_es-pa.min.js") : Url("angular-locale_es-pa.js");
            public static readonly string angular_locale_es_pe_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_es-pe.min.js") ? Url("angular-locale_es-pe.min.js") : Url("angular-locale_es-pe.js");
            public static readonly string angular_locale_es_pr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_es-pr.min.js") ? Url("angular-locale_es-pr.min.js") : Url("angular-locale_es-pr.js");
            public static readonly string angular_locale_es_py_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_es-py.min.js") ? Url("angular-locale_es-py.min.js") : Url("angular-locale_es-py.js");
            public static readonly string angular_locale_es_sv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_es-sv.min.js") ? Url("angular-locale_es-sv.min.js") : Url("angular-locale_es-sv.js");
            public static readonly string angular_locale_es_us_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_es-us.min.js") ? Url("angular-locale_es-us.min.js") : Url("angular-locale_es-us.js");
            public static readonly string angular_locale_es_uy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_es-uy.min.js") ? Url("angular-locale_es-uy.min.js") : Url("angular-locale_es-uy.js");
            public static readonly string angular_locale_es_ve_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_es-ve.min.js") ? Url("angular-locale_es-ve.min.js") : Url("angular-locale_es-ve.js");
            public static readonly string angular_locale_es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_es.min.js") ? Url("angular-locale_es.min.js") : Url("angular-locale_es.js");
            public static readonly string angular_locale_et_ee_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_et-ee.min.js") ? Url("angular-locale_et-ee.min.js") : Url("angular-locale_et-ee.js");
            public static readonly string angular_locale_et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_et.min.js") ? Url("angular-locale_et.min.js") : Url("angular-locale_et.js");
            public static readonly string angular_locale_eu_es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_eu-es.min.js") ? Url("angular-locale_eu-es.min.js") : Url("angular-locale_eu-es.js");
            public static readonly string angular_locale_eu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_eu.min.js") ? Url("angular-locale_eu.min.js") : Url("angular-locale_eu.js");
            public static readonly string angular_locale_fa_af_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fa-af.min.js") ? Url("angular-locale_fa-af.min.js") : Url("angular-locale_fa-af.js");
            public static readonly string angular_locale_fa_ir_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fa-ir.min.js") ? Url("angular-locale_fa-ir.min.js") : Url("angular-locale_fa-ir.js");
            public static readonly string angular_locale_fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fa.min.js") ? Url("angular-locale_fa.min.js") : Url("angular-locale_fa.js");
            public static readonly string angular_locale_fi_fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fi-fi.min.js") ? Url("angular-locale_fi-fi.min.js") : Url("angular-locale_fi-fi.js");
            public static readonly string angular_locale_fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fi.min.js") ? Url("angular-locale_fi.min.js") : Url("angular-locale_fi.js");
            public static readonly string angular_locale_fil_ph_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fil-ph.min.js") ? Url("angular-locale_fil-ph.min.js") : Url("angular-locale_fil-ph.js");
            public static readonly string angular_locale_fil_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fil.min.js") ? Url("angular-locale_fil.min.js") : Url("angular-locale_fil.js");
            public static readonly string angular_locale_fr_be_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-be.min.js") ? Url("angular-locale_fr-be.min.js") : Url("angular-locale_fr-be.js");
            public static readonly string angular_locale_fr_bf_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-bf.min.js") ? Url("angular-locale_fr-bf.min.js") : Url("angular-locale_fr-bf.js");
            public static readonly string angular_locale_fr_bi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-bi.min.js") ? Url("angular-locale_fr-bi.min.js") : Url("angular-locale_fr-bi.js");
            public static readonly string angular_locale_fr_bj_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-bj.min.js") ? Url("angular-locale_fr-bj.min.js") : Url("angular-locale_fr-bj.js");
            public static readonly string angular_locale_fr_bl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-bl.min.js") ? Url("angular-locale_fr-bl.min.js") : Url("angular-locale_fr-bl.js");
            public static readonly string angular_locale_fr_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-ca.min.js") ? Url("angular-locale_fr-ca.min.js") : Url("angular-locale_fr-ca.js");
            public static readonly string angular_locale_fr_cd_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-cd.min.js") ? Url("angular-locale_fr-cd.min.js") : Url("angular-locale_fr-cd.js");
            public static readonly string angular_locale_fr_cf_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-cf.min.js") ? Url("angular-locale_fr-cf.min.js") : Url("angular-locale_fr-cf.js");
            public static readonly string angular_locale_fr_cg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-cg.min.js") ? Url("angular-locale_fr-cg.min.js") : Url("angular-locale_fr-cg.js");
            public static readonly string angular_locale_fr_ch_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-ch.min.js") ? Url("angular-locale_fr-ch.min.js") : Url("angular-locale_fr-ch.js");
            public static readonly string angular_locale_fr_ci_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-ci.min.js") ? Url("angular-locale_fr-ci.min.js") : Url("angular-locale_fr-ci.js");
            public static readonly string angular_locale_fr_cm_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-cm.min.js") ? Url("angular-locale_fr-cm.min.js") : Url("angular-locale_fr-cm.js");
            public static readonly string angular_locale_fr_dj_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-dj.min.js") ? Url("angular-locale_fr-dj.min.js") : Url("angular-locale_fr-dj.js");
            public static readonly string angular_locale_fr_fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-fr.min.js") ? Url("angular-locale_fr-fr.min.js") : Url("angular-locale_fr-fr.js");
            public static readonly string angular_locale_fr_ga_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-ga.min.js") ? Url("angular-locale_fr-ga.min.js") : Url("angular-locale_fr-ga.js");
            public static readonly string angular_locale_fr_gf_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-gf.min.js") ? Url("angular-locale_fr-gf.min.js") : Url("angular-locale_fr-gf.js");
            public static readonly string angular_locale_fr_gn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-gn.min.js") ? Url("angular-locale_fr-gn.min.js") : Url("angular-locale_fr-gn.js");
            public static readonly string angular_locale_fr_gp_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-gp.min.js") ? Url("angular-locale_fr-gp.min.js") : Url("angular-locale_fr-gp.js");
            public static readonly string angular_locale_fr_gq_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-gq.min.js") ? Url("angular-locale_fr-gq.min.js") : Url("angular-locale_fr-gq.js");
            public static readonly string angular_locale_fr_km_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-km.min.js") ? Url("angular-locale_fr-km.min.js") : Url("angular-locale_fr-km.js");
            public static readonly string angular_locale_fr_lu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-lu.min.js") ? Url("angular-locale_fr-lu.min.js") : Url("angular-locale_fr-lu.js");
            public static readonly string angular_locale_fr_mc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-mc.min.js") ? Url("angular-locale_fr-mc.min.js") : Url("angular-locale_fr-mc.js");
            public static readonly string angular_locale_fr_mf_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-mf.min.js") ? Url("angular-locale_fr-mf.min.js") : Url("angular-locale_fr-mf.js");
            public static readonly string angular_locale_fr_mg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-mg.min.js") ? Url("angular-locale_fr-mg.min.js") : Url("angular-locale_fr-mg.js");
            public static readonly string angular_locale_fr_ml_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-ml.min.js") ? Url("angular-locale_fr-ml.min.js") : Url("angular-locale_fr-ml.js");
            public static readonly string angular_locale_fr_mq_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-mq.min.js") ? Url("angular-locale_fr-mq.min.js") : Url("angular-locale_fr-mq.js");
            public static readonly string angular_locale_fr_ne_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-ne.min.js") ? Url("angular-locale_fr-ne.min.js") : Url("angular-locale_fr-ne.js");
            public static readonly string angular_locale_fr_re_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-re.min.js") ? Url("angular-locale_fr-re.min.js") : Url("angular-locale_fr-re.js");
            public static readonly string angular_locale_fr_rw_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-rw.min.js") ? Url("angular-locale_fr-rw.min.js") : Url("angular-locale_fr-rw.js");
            public static readonly string angular_locale_fr_sn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-sn.min.js") ? Url("angular-locale_fr-sn.min.js") : Url("angular-locale_fr-sn.js");
            public static readonly string angular_locale_fr_td_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-td.min.js") ? Url("angular-locale_fr-td.min.js") : Url("angular-locale_fr-td.js");
            public static readonly string angular_locale_fr_tg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-tg.min.js") ? Url("angular-locale_fr-tg.min.js") : Url("angular-locale_fr-tg.js");
            public static readonly string angular_locale_fr_yt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr-yt.min.js") ? Url("angular-locale_fr-yt.min.js") : Url("angular-locale_fr-yt.js");
            public static readonly string angular_locale_fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_fr.min.js") ? Url("angular-locale_fr.min.js") : Url("angular-locale_fr.js");
            public static readonly string angular_locale_gl_es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_gl-es.min.js") ? Url("angular-locale_gl-es.min.js") : Url("angular-locale_gl-es.js");
            public static readonly string angular_locale_gl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_gl.min.js") ? Url("angular-locale_gl.min.js") : Url("angular-locale_gl.js");
            public static readonly string angular_locale_gsw_ch_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_gsw-ch.min.js") ? Url("angular-locale_gsw-ch.min.js") : Url("angular-locale_gsw-ch.js");
            public static readonly string angular_locale_gsw_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_gsw.min.js") ? Url("angular-locale_gsw.min.js") : Url("angular-locale_gsw.js");
            public static readonly string angular_locale_gu_in_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_gu-in.min.js") ? Url("angular-locale_gu-in.min.js") : Url("angular-locale_gu-in.js");
            public static readonly string angular_locale_gu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_gu.min.js") ? Url("angular-locale_gu.min.js") : Url("angular-locale_gu.js");
            public static readonly string angular_locale_haw_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_haw.min.js") ? Url("angular-locale_haw.min.js") : Url("angular-locale_haw.js");
            public static readonly string angular_locale_he_il_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_he-il.min.js") ? Url("angular-locale_he-il.min.js") : Url("angular-locale_he-il.js");
            public static readonly string angular_locale_he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_he.min.js") ? Url("angular-locale_he.min.js") : Url("angular-locale_he.js");
            public static readonly string angular_locale_hi_in_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_hi-in.min.js") ? Url("angular-locale_hi-in.min.js") : Url("angular-locale_hi-in.js");
            public static readonly string angular_locale_hi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_hi.min.js") ? Url("angular-locale_hi.min.js") : Url("angular-locale_hi.js");
            public static readonly string angular_locale_hr_hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_hr-hr.min.js") ? Url("angular-locale_hr-hr.min.js") : Url("angular-locale_hr-hr.js");
            public static readonly string angular_locale_hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_hr.min.js") ? Url("angular-locale_hr.min.js") : Url("angular-locale_hr.js");
            public static readonly string angular_locale_hu_hu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_hu-hu.min.js") ? Url("angular-locale_hu-hu.min.js") : Url("angular-locale_hu-hu.js");
            public static readonly string angular_locale_hu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_hu.min.js") ? Url("angular-locale_hu.min.js") : Url("angular-locale_hu.js");
            public static readonly string angular_locale_id_id_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_id-id.min.js") ? Url("angular-locale_id-id.min.js") : Url("angular-locale_id-id.js");
            public static readonly string angular_locale_id_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_id.min.js") ? Url("angular-locale_id.min.js") : Url("angular-locale_id.js");
            public static readonly string angular_locale_in_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_in.min.js") ? Url("angular-locale_in.min.js") : Url("angular-locale_in.js");
            public static readonly string angular_locale_is_is_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_is-is.min.js") ? Url("angular-locale_is-is.min.js") : Url("angular-locale_is-is.js");
            public static readonly string angular_locale_is_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_is.min.js") ? Url("angular-locale_is.min.js") : Url("angular-locale_is.js");
            public static readonly string angular_locale_it_ch_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_it-ch.min.js") ? Url("angular-locale_it-ch.min.js") : Url("angular-locale_it-ch.js");
            public static readonly string angular_locale_it_it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_it-it.min.js") ? Url("angular-locale_it-it.min.js") : Url("angular-locale_it-it.js");
            public static readonly string angular_locale_it_sm_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_it-sm.min.js") ? Url("angular-locale_it-sm.min.js") : Url("angular-locale_it-sm.js");
            public static readonly string angular_locale_it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_it.min.js") ? Url("angular-locale_it.min.js") : Url("angular-locale_it.js");
            public static readonly string angular_locale_iw_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_iw.min.js") ? Url("angular-locale_iw.min.js") : Url("angular-locale_iw.js");
            public static readonly string angular_locale_ja_jp_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ja-jp.min.js") ? Url("angular-locale_ja-jp.min.js") : Url("angular-locale_ja-jp.js");
            public static readonly string angular_locale_ja_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ja.min.js") ? Url("angular-locale_ja.min.js") : Url("angular-locale_ja.js");
            public static readonly string angular_locale_kn_in_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_kn-in.min.js") ? Url("angular-locale_kn-in.min.js") : Url("angular-locale_kn-in.js");
            public static readonly string angular_locale_kn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_kn.min.js") ? Url("angular-locale_kn.min.js") : Url("angular-locale_kn.js");
            public static readonly string angular_locale_ko_kr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ko-kr.min.js") ? Url("angular-locale_ko-kr.min.js") : Url("angular-locale_ko-kr.js");
            public static readonly string angular_locale_ko_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ko.min.js") ? Url("angular-locale_ko.min.js") : Url("angular-locale_ko.js");
            public static readonly string angular_locale_ln_cd_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ln-cd.min.js") ? Url("angular-locale_ln-cd.min.js") : Url("angular-locale_ln-cd.js");
            public static readonly string angular_locale_ln_cg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ln-cg.min.js") ? Url("angular-locale_ln-cg.min.js") : Url("angular-locale_ln-cg.js");
            public static readonly string angular_locale_ln_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ln.min.js") ? Url("angular-locale_ln.min.js") : Url("angular-locale_ln.js");
            public static readonly string angular_locale_lt_lt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_lt-lt.min.js") ? Url("angular-locale_lt-lt.min.js") : Url("angular-locale_lt-lt.js");
            public static readonly string angular_locale_lt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_lt.min.js") ? Url("angular-locale_lt.min.js") : Url("angular-locale_lt.js");
            public static readonly string angular_locale_lv_lv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_lv-lv.min.js") ? Url("angular-locale_lv-lv.min.js") : Url("angular-locale_lv-lv.js");
            public static readonly string angular_locale_lv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_lv.min.js") ? Url("angular-locale_lv.min.js") : Url("angular-locale_lv.js");
            public static readonly string angular_locale_ml_in_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ml-in.min.js") ? Url("angular-locale_ml-in.min.js") : Url("angular-locale_ml-in.js");
            public static readonly string angular_locale_ml_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ml.min.js") ? Url("angular-locale_ml.min.js") : Url("angular-locale_ml.js");
            public static readonly string angular_locale_mo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_mo.min.js") ? Url("angular-locale_mo.min.js") : Url("angular-locale_mo.js");
            public static readonly string angular_locale_mr_in_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_mr-in.min.js") ? Url("angular-locale_mr-in.min.js") : Url("angular-locale_mr-in.js");
            public static readonly string angular_locale_mr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_mr.min.js") ? Url("angular-locale_mr.min.js") : Url("angular-locale_mr.js");
            public static readonly string angular_locale_ms_bn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ms-bn.min.js") ? Url("angular-locale_ms-bn.min.js") : Url("angular-locale_ms-bn.js");
            public static readonly string angular_locale_ms_my_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ms-my.min.js") ? Url("angular-locale_ms-my.min.js") : Url("angular-locale_ms-my.js");
            public static readonly string angular_locale_ms_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ms.min.js") ? Url("angular-locale_ms.min.js") : Url("angular-locale_ms.js");
            public static readonly string angular_locale_mt_mt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_mt-mt.min.js") ? Url("angular-locale_mt-mt.min.js") : Url("angular-locale_mt-mt.js");
            public static readonly string angular_locale_mt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_mt.min.js") ? Url("angular-locale_mt.min.js") : Url("angular-locale_mt.js");
            public static readonly string angular_locale_nl_aw_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_nl-aw.min.js") ? Url("angular-locale_nl-aw.min.js") : Url("angular-locale_nl-aw.js");
            public static readonly string angular_locale_nl_be_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_nl-be.min.js") ? Url("angular-locale_nl-be.min.js") : Url("angular-locale_nl-be.js");
            public static readonly string angular_locale_nl_cw_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_nl-cw.min.js") ? Url("angular-locale_nl-cw.min.js") : Url("angular-locale_nl-cw.js");
            public static readonly string angular_locale_nl_nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_nl-nl.min.js") ? Url("angular-locale_nl-nl.min.js") : Url("angular-locale_nl-nl.js");
            public static readonly string angular_locale_nl_sx_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_nl-sx.min.js") ? Url("angular-locale_nl-sx.min.js") : Url("angular-locale_nl-sx.js");
            public static readonly string angular_locale_nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_nl.min.js") ? Url("angular-locale_nl.min.js") : Url("angular-locale_nl.js");
            public static readonly string angular_locale_no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_no.min.js") ? Url("angular-locale_no.min.js") : Url("angular-locale_no.js");
            public static readonly string angular_locale_or_in_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_or-in.min.js") ? Url("angular-locale_or-in.min.js") : Url("angular-locale_or-in.js");
            public static readonly string angular_locale_or_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_or.min.js") ? Url("angular-locale_or.min.js") : Url("angular-locale_or.js");
            public static readonly string angular_locale_pl_pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_pl-pl.min.js") ? Url("angular-locale_pl-pl.min.js") : Url("angular-locale_pl-pl.js");
            public static readonly string angular_locale_pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_pl.min.js") ? Url("angular-locale_pl.min.js") : Url("angular-locale_pl.js");
            public static readonly string angular_locale_pt_ao_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_pt-ao.min.js") ? Url("angular-locale_pt-ao.min.js") : Url("angular-locale_pt-ao.js");
            public static readonly string angular_locale_pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_pt-br.min.js") ? Url("angular-locale_pt-br.min.js") : Url("angular-locale_pt-br.js");
            public static readonly string angular_locale_pt_gw_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_pt-gw.min.js") ? Url("angular-locale_pt-gw.min.js") : Url("angular-locale_pt-gw.js");
            public static readonly string angular_locale_pt_mz_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_pt-mz.min.js") ? Url("angular-locale_pt-mz.min.js") : Url("angular-locale_pt-mz.js");
            public static readonly string angular_locale_pt_pt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_pt-pt.min.js") ? Url("angular-locale_pt-pt.min.js") : Url("angular-locale_pt-pt.js");
            public static readonly string angular_locale_pt_st_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_pt-st.min.js") ? Url("angular-locale_pt-st.min.js") : Url("angular-locale_pt-st.js");
            public static readonly string angular_locale_pt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_pt.min.js") ? Url("angular-locale_pt.min.js") : Url("angular-locale_pt.js");
            public static readonly string angular_locale_ro_md_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ro-md.min.js") ? Url("angular-locale_ro-md.min.js") : Url("angular-locale_ro-md.js");
            public static readonly string angular_locale_ro_ro_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ro-ro.min.js") ? Url("angular-locale_ro-ro.min.js") : Url("angular-locale_ro-ro.js");
            public static readonly string angular_locale_ro_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ro.min.js") ? Url("angular-locale_ro.min.js") : Url("angular-locale_ro.js");
            public static readonly string angular_locale_ru_md_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ru-md.min.js") ? Url("angular-locale_ru-md.min.js") : Url("angular-locale_ru-md.js");
            public static readonly string angular_locale_ru_ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ru-ru.min.js") ? Url("angular-locale_ru-ru.min.js") : Url("angular-locale_ru-ru.js");
            public static readonly string angular_locale_ru_ua_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ru-ua.min.js") ? Url("angular-locale_ru-ua.min.js") : Url("angular-locale_ru-ua.js");
            public static readonly string angular_locale_ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ru.min.js") ? Url("angular-locale_ru.min.js") : Url("angular-locale_ru.js");
            public static readonly string angular_locale_sk_sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_sk-sk.min.js") ? Url("angular-locale_sk-sk.min.js") : Url("angular-locale_sk-sk.js");
            public static readonly string angular_locale_sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_sk.min.js") ? Url("angular-locale_sk.min.js") : Url("angular-locale_sk.js");
            public static readonly string angular_locale_sl_si_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_sl-si.min.js") ? Url("angular-locale_sl-si.min.js") : Url("angular-locale_sl-si.js");
            public static readonly string angular_locale_sl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_sl.min.js") ? Url("angular-locale_sl.min.js") : Url("angular-locale_sl.js");
            public static readonly string angular_locale_sq_al_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_sq-al.min.js") ? Url("angular-locale_sq-al.min.js") : Url("angular-locale_sq-al.js");
            public static readonly string angular_locale_sq_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_sq.min.js") ? Url("angular-locale_sq.min.js") : Url("angular-locale_sq.js");
            public static readonly string angular_locale_sr_cyrl_ba_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_sr-cyrl-ba.min.js") ? Url("angular-locale_sr-cyrl-ba.min.js") : Url("angular-locale_sr-cyrl-ba.js");
            public static readonly string angular_locale_sr_cyrl_me_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_sr-cyrl-me.min.js") ? Url("angular-locale_sr-cyrl-me.min.js") : Url("angular-locale_sr-cyrl-me.js");
            public static readonly string angular_locale_sr_cyrl_rs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_sr-cyrl-rs.min.js") ? Url("angular-locale_sr-cyrl-rs.min.js") : Url("angular-locale_sr-cyrl-rs.js");
            public static readonly string angular_locale_sr_cyrl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_sr-cyrl.min.js") ? Url("angular-locale_sr-cyrl.min.js") : Url("angular-locale_sr-cyrl.js");
            public static readonly string angular_locale_sr_latn_ba_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_sr-latn-ba.min.js") ? Url("angular-locale_sr-latn-ba.min.js") : Url("angular-locale_sr-latn-ba.js");
            public static readonly string angular_locale_sr_latn_me_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_sr-latn-me.min.js") ? Url("angular-locale_sr-latn-me.min.js") : Url("angular-locale_sr-latn-me.js");
            public static readonly string angular_locale_sr_latn_rs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_sr-latn-rs.min.js") ? Url("angular-locale_sr-latn-rs.min.js") : Url("angular-locale_sr-latn-rs.js");
            public static readonly string angular_locale_sr_latn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_sr-latn.min.js") ? Url("angular-locale_sr-latn.min.js") : Url("angular-locale_sr-latn.js");
            public static readonly string angular_locale_sr_rs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_sr-rs.min.js") ? Url("angular-locale_sr-rs.min.js") : Url("angular-locale_sr-rs.js");
            public static readonly string angular_locale_sr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_sr.min.js") ? Url("angular-locale_sr.min.js") : Url("angular-locale_sr.js");
            public static readonly string angular_locale_sv_fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_sv-fi.min.js") ? Url("angular-locale_sv-fi.min.js") : Url("angular-locale_sv-fi.js");
            public static readonly string angular_locale_sv_se_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_sv-se.min.js") ? Url("angular-locale_sv-se.min.js") : Url("angular-locale_sv-se.js");
            public static readonly string angular_locale_sv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_sv.min.js") ? Url("angular-locale_sv.min.js") : Url("angular-locale_sv.js");
            public static readonly string angular_locale_sw_ke_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_sw-ke.min.js") ? Url("angular-locale_sw-ke.min.js") : Url("angular-locale_sw-ke.js");
            public static readonly string angular_locale_sw_tz_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_sw-tz.min.js") ? Url("angular-locale_sw-tz.min.js") : Url("angular-locale_sw-tz.js");
            public static readonly string angular_locale_sw_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_sw.min.js") ? Url("angular-locale_sw.min.js") : Url("angular-locale_sw.js");
            public static readonly string angular_locale_ta_in_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ta-in.min.js") ? Url("angular-locale_ta-in.min.js") : Url("angular-locale_ta-in.js");
            public static readonly string angular_locale_ta_lk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ta-lk.min.js") ? Url("angular-locale_ta-lk.min.js") : Url("angular-locale_ta-lk.js");
            public static readonly string angular_locale_ta_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ta.min.js") ? Url("angular-locale_ta.min.js") : Url("angular-locale_ta.js");
            public static readonly string angular_locale_te_in_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_te-in.min.js") ? Url("angular-locale_te-in.min.js") : Url("angular-locale_te-in.js");
            public static readonly string angular_locale_te_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_te.min.js") ? Url("angular-locale_te.min.js") : Url("angular-locale_te.js");
            public static readonly string angular_locale_th_th_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_th-th.min.js") ? Url("angular-locale_th-th.min.js") : Url("angular-locale_th-th.js");
            public static readonly string angular_locale_th_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_th.min.js") ? Url("angular-locale_th.min.js") : Url("angular-locale_th.js");
            public static readonly string angular_locale_tl_ph_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_tl-ph.min.js") ? Url("angular-locale_tl-ph.min.js") : Url("angular-locale_tl-ph.js");
            public static readonly string angular_locale_tl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_tl.min.js") ? Url("angular-locale_tl.min.js") : Url("angular-locale_tl.js");
            public static readonly string angular_locale_tr_tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_tr-tr.min.js") ? Url("angular-locale_tr-tr.min.js") : Url("angular-locale_tr-tr.js");
            public static readonly string angular_locale_tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_tr.min.js") ? Url("angular-locale_tr.min.js") : Url("angular-locale_tr.js");
            public static readonly string angular_locale_uk_ua_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_uk-ua.min.js") ? Url("angular-locale_uk-ua.min.js") : Url("angular-locale_uk-ua.js");
            public static readonly string angular_locale_uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_uk.min.js") ? Url("angular-locale_uk.min.js") : Url("angular-locale_uk.js");
            public static readonly string angular_locale_ur_in_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ur-in.min.js") ? Url("angular-locale_ur-in.min.js") : Url("angular-locale_ur-in.js");
            public static readonly string angular_locale_ur_pk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ur-pk.min.js") ? Url("angular-locale_ur-pk.min.js") : Url("angular-locale_ur-pk.js");
            public static readonly string angular_locale_ur_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_ur.min.js") ? Url("angular-locale_ur.min.js") : Url("angular-locale_ur.js");
            public static readonly string angular_locale_vi_vn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_vi-vn.min.js") ? Url("angular-locale_vi-vn.min.js") : Url("angular-locale_vi-vn.js");
            public static readonly string angular_locale_vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_vi.min.js") ? Url("angular-locale_vi.min.js") : Url("angular-locale_vi.js");
            public static readonly string angular_locale_zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_zh-cn.min.js") ? Url("angular-locale_zh-cn.min.js") : Url("angular-locale_zh-cn.js");
            public static readonly string angular_locale_zh_hans_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_zh-hans-cn.min.js") ? Url("angular-locale_zh-hans-cn.min.js") : Url("angular-locale_zh-hans-cn.js");
            public static readonly string angular_locale_zh_hans_hk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_zh-hans-hk.min.js") ? Url("angular-locale_zh-hans-hk.min.js") : Url("angular-locale_zh-hans-hk.js");
            public static readonly string angular_locale_zh_hans_mo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_zh-hans-mo.min.js") ? Url("angular-locale_zh-hans-mo.min.js") : Url("angular-locale_zh-hans-mo.js");
            public static readonly string angular_locale_zh_hans_sg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_zh-hans-sg.min.js") ? Url("angular-locale_zh-hans-sg.min.js") : Url("angular-locale_zh-hans-sg.js");
            public static readonly string angular_locale_zh_hans_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_zh-hans.min.js") ? Url("angular-locale_zh-hans.min.js") : Url("angular-locale_zh-hans.js");
            public static readonly string angular_locale_zh_hant_hk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_zh-hant-hk.min.js") ? Url("angular-locale_zh-hant-hk.min.js") : Url("angular-locale_zh-hant-hk.js");
            public static readonly string angular_locale_zh_hant_mo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_zh-hant-mo.min.js") ? Url("angular-locale_zh-hant-mo.min.js") : Url("angular-locale_zh-hant-mo.js");
            public static readonly string angular_locale_zh_hant_tw_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_zh-hant-tw.min.js") ? Url("angular-locale_zh-hant-tw.min.js") : Url("angular-locale_zh-hant-tw.js");
            public static readonly string angular_locale_zh_hant_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_zh-hant.min.js") ? Url("angular-locale_zh-hant.min.js") : Url("angular-locale_zh-hant.js");
            public static readonly string angular_locale_zh_hk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_zh-hk.min.js") ? Url("angular-locale_zh-hk.min.js") : Url("angular-locale_zh-hk.js");
            public static readonly string angular_locale_zh_tw_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_zh-tw.min.js") ? Url("angular-locale_zh-tw.min.js") : Url("angular-locale_zh-tw.js");
            public static readonly string angular_locale_zh_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_zh.min.js") ? Url("angular-locale_zh.min.js") : Url("angular-locale_zh.js");
            public static readonly string angular_locale_zu_za_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_zu-za.min.js") ? Url("angular-locale_zu-za.min.js") : Url("angular-locale_zu-za.js");
            public static readonly string angular_locale_zu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/angular-locale_zu.min.js") ? Url("angular-locale_zu.min.js") : Url("angular-locale_zu.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class jqtimeto {
            private const string URLPATH = "~/Scripts/jqtimeto";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string jquery_timeTo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.timeTo.min.js") ? Url("jquery.timeTo.min.js") : Url("jquery.timeTo.js");
            public static readonly string jquery_timeTo_min_js = Url("jquery.timeTo.min.js");
        }
    
        public static readonly string jquery_1_9_1_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.9.1-vsdoc.min.js") ? Url("jquery-1.9.1-vsdoc.min.js") : Url("jquery-1.9.1-vsdoc.js");
        public static readonly string jquery_1_9_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.9.1.min.js") ? Url("jquery-1.9.1.min.js") : Url("jquery-1.9.1.js");
        public static readonly string jquery_1_9_1_min_js = Url("jquery-1.9.1.min.js");
        public static readonly string jquery_1_9_1_min_map = Url("jquery-1.9.1.min.map");
        public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
        public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
        public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class padel {
            private const string URLPATH = "~/Scripts/padel";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class admin {
                private const string URLPATH = "~/Scripts/padel/admin";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string admin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/admin.min.js") ? Url("admin.min.js") : Url("admin.js");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class jugadores {
                    private const string URLPATH = "~/Scripts/padel/admin/jugadores";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string grid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.min.js") ? Url("grid.min.js") : Url("grid.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class torneos {
                    private const string URLPATH = "~/Scripts/padel/admin/torneos";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string grid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/grid.min.js") ? Url("grid.min.js") : Url("grid.js");
                    public static readonly string verify_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/verify.min.js") ? Url("verify.min.js") : Url("verify.js");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class jugador {
                private const string URLPATH = "~/Scripts/padel/jugador";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class demo {
                    private const string URLPATH = "~/Scripts/padel/jugador/demo";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string dashboard_demo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dashboard-demo.min.js") ? Url("dashboard-demo.min.js") : Url("dashboard-demo.js");
                    public static readonly string flot_demo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/flot-demo.min.js") ? Url("flot-demo.min.js") : Url("flot-demo.js");
                    public static readonly string morris_demo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/morris-demo.min.js") ? Url("morris-demo.min.js") : Url("morris-demo.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class equipos {
                    private const string URLPATH = "~/Scripts/padel/jugador/equipos";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string crud_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/crud.min.js") ? Url("crud.min.js") : Url("crud.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class graficas {
                    private const string URLPATH = "~/Scripts/padel/jugador/graficas";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string datos_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datos.min.js") ? Url("datos.min.js") : Url("datos.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class plugins {
                    private const string URLPATH = "~/Scripts/padel/jugador/plugins";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dataTables {
                        private const string URLPATH = "~/Scripts/padel/jugador/plugins/dataTables";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string dataTables_bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.bootstrap.min.js") ? Url("dataTables.bootstrap.min.js") : Url("dataTables.bootstrap.js");
                        public static readonly string jquery_dataTables_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.dataTables.min.js") ? Url("jquery.dataTables.min.js") : Url("jquery.dataTables.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class flot {
                        private const string URLPATH = "~/Scripts/padel/jugador/plugins/flot";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string excanvas_min_js = Url("excanvas.min.js");
                        public static readonly string jquery_flot_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.min.js") ? Url("jquery.flot.min.js") : Url("jquery.flot.js");
                        public static readonly string jquery_flot_pie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.pie.min.js") ? Url("jquery.flot.pie.min.js") : Url("jquery.flot.pie.js");
                        public static readonly string jquery_flot_resize_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.resize.min.js") ? Url("jquery.flot.resize.min.js") : Url("jquery.flot.resize.js");
                        public static readonly string jquery_flot_tooltip_min_js = Url("jquery.flot.tooltip.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class metisMenu {
                        private const string URLPATH = "~/Scripts/padel/jugador/plugins/metisMenu";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_metisMenu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.metisMenu.min.js") ? Url("jquery.metisMenu.min.js") : Url("jquery.metisMenu.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class morris {
                        private const string URLPATH = "~/Scripts/padel/jugador/plugins/morris";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string morris_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/morris.min.js") ? Url("morris.min.js") : Url("morris.js");
                        public static readonly string raphael_2_1_0_min_js = Url("raphael-2.1.0.min.js");
                    }
                
                }
            
                public static readonly string sb_admin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sb-admin.min.js") ? Url("sb-admin.min.js") : Url("sb-admin.js");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class torneos {
                    private const string URLPATH = "~/Scripts/padel/jugador/torneos";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string crud_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/crud.min.js") ? Url("crud.min.js") : Url("crud.js");
                }
            
            }
        
            public static readonly string padel_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/padel.min.js") ? Url("padel.min.js") : Url("padel.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class torneos {
                private const string URLPATH = "~/Scripts/padel/torneos";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string apuntate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/apuntate.min.js") ? Url("apuntate.min.js") : Url("apuntate.js");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class slimscroll {
            private const string URLPATH = "~/Scripts/slimscroll";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string jquery_slimscroll_min_js = Url("jquery.slimscroll.min.js");
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class admin {
            private const string URLPATH = "~/Content/admin";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class grid {
                private const string URLPATH = "~/Content/admin/grid";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string ng_grid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ng-grid.min.css") ? Url("ng-grid.min.css") : Url("ng-grid.css");
                     
            }
        
            public static readonly string style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/style.min.css") ? Url("style.min.css") : Url("style.css");
                 
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class bootstrap {
            private const string URLPATH = "~/Content/bootstrap";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class carousel {
                private const string URLPATH = "~/Content/bootstrap/carousel";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string carousel_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/carousel.min.css") ? Url("carousel.min.css") : Url("carousel.css");
                     
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                private const string URLPATH = "~/Content/bootstrap/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-theme.min.css") ? Url("bootstrap-theme.min.css") : Url("bootstrap-theme.css");
                     
                public static readonly string bootstrap_theme_min_css = Url("bootstrap-theme.min.css");
                public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
                     
                public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class fonts {
                private const string URLPATH = "~/Content/bootstrap/fonts";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string glyphicons_halflings_regular_eot = Url("glyphicons-halflings-regular.eot");
                public static readonly string glyphicons_halflings_regular_svg = Url("glyphicons-halflings-regular.svg");
                public static readonly string glyphicons_halflings_regular_ttf = Url("glyphicons-halflings-regular.ttf");
                public static readonly string glyphicons_halflings_regular_woff = Url("glyphicons-halflings-regular.woff");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class fontawesome {
            private const string URLPATH = "~/Content/fontawesome";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                private const string URLPATH = "~/Content/fontawesome/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string font_awesome_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/font-awesome.min.css") ? Url("font-awesome.min.css") : Url("font-awesome.css");
                     
                public static readonly string font_awesome_min_css = Url("font-awesome.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class fonts {
                private const string URLPATH = "~/Content/fontawesome/fonts";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string fontawesome_webfont_eot = Url("fontawesome-webfont.eot");
                public static readonly string fontawesome_webfont_svg = Url("fontawesome-webfont.svg");
                public static readonly string fontawesome_webfont_ttf = Url("fontawesome-webfont.ttf");
                public static readonly string fontawesome_webfont_woff = Url("fontawesome-webfont.woff");
                public static readonly string FontAwesome_otf = Url("FontAwesome.otf");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class fonts {
            private const string URLPATH = "~/Content/fonts";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string fontawesome_webfont_eot = Url("fontawesome-webfont.eot");
            public static readonly string fontawesome_webfont_svg = Url("fontawesome-webfont.svg");
            public static readonly string fontawesome_webfont_ttf = Url("fontawesome-webfont.ttf");
            public static readonly string fontawesome_webfont_woff = Url("fontawesome-webfont.woff");
            public static readonly string FontAwesome_otf = Url("FontAwesome.otf");
            public static readonly string glyphicons_halflings_regular_eot = Url("glyphicons-halflings-regular.eot");
            public static readonly string glyphicons_halflings_regular_svg = Url("glyphicons-halflings-regular.svg");
            public static readonly string glyphicons_halflings_regular_ttf = Url("glyphicons-halflings-regular.ttf");
            public static readonly string glyphicons_halflings_regular_woff = Url("glyphicons-halflings-regular.woff");
            public static readonly string ionicons_eot = Url("ionicons.eot");
            public static readonly string ionicons_svg = Url("ionicons.svg");
            public static readonly string ionicons_ttf = Url("ionicons.ttf");
            public static readonly string ionicons_woff = Url("ionicons.woff");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class fuelux {
            private const string URLPATH = "~/Content/fuelux";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                private const string URLPATH = "~/Content/fuelux/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string fuelux_responsive_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fuelux-responsive.min.css") ? Url("fuelux-responsive.min.css") : Url("fuelux-responsive.css");
                     
                public static readonly string fuelux_responsive_min_css = Url("fuelux-responsive.min.css");
                public static readonly string fuelux_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fuelux.min.css") ? Url("fuelux.min.css") : Url("fuelux.css");
                     
                public static readonly string fuelux_min_css = Url("fuelux.min.css");
                public static readonly string padel_fuelux_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/padel-fuelux.min.css") ? Url("padel-fuelux.min.css") : Url("padel-fuelux.css");
                     
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class fonts {
                private const string URLPATH = "~/Content/fuelux/fonts";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string fuelux_preloader_eot = Url("fuelux-preloader.eot");
                public static readonly string fuelux_preloader_svg = Url("fuelux-preloader.svg");
                public static readonly string fuelux_preloader_ttf = Url("fuelux-preloader.ttf");
                public static readonly string fuelux_preloader_woff = Url("fuelux-preloader.woff");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class img {
                private const string URLPATH = "~/Content/fuelux/img";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string form_png = Url("form.png");
                public static readonly string glyphicons_halflings_white_png = Url("glyphicons-halflings-white.png");
                public static readonly string glyphicons_halflings_png = Url("glyphicons-halflings.png");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class img {
            private const string URLPATH = "~/Content/img";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string bola_red_jpg = Url("bola_red.jpg");
            public static readonly string chica_padel_jpg = Url("chica_padel.jpg");
            public static readonly string competicion_padel_jpg = Url("competicion_padel.jpg");
            public static readonly string form_png = Url("form.png");
            public static readonly string glyphicons_halflings_white_png = Url("glyphicons-halflings-white.png");
            public static readonly string glyphicons_halflings_png = Url("glyphicons-halflings.png");
            public static readonly string torneo_backgroung_jpg = Url("torneo_backgroung.jpg");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class ionicons {
            private const string URLPATH = "~/Content/ionicons";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                private const string URLPATH = "~/Content/ionicons/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string ionicons_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ionicons.min.css") ? Url("ionicons.min.css") : Url("ionicons.css");
                     
                public static readonly string ionicons_min_css = Url("ionicons.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class fonts {
                private const string URLPATH = "~/Content/ionicons/fonts";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string ionicons_eot = Url("ionicons.eot");
                public static readonly string ionicons_svg = Url("ionicons.svg");
                public static readonly string ionicons_ttf = Url("ionicons.ttf");
                public static readonly string ionicons_woff = Url("ionicons.woff");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class jqtimeto {
            private const string URLPATH = "~/Content/jqtimeto";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string timeTo_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/timeTo.min.css") ? Url("timeTo.min.css") : Url("timeTo.css");
                 
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class jugador {
            private const string URLPATH = "~/Content/jugador";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class plugins {
                private const string URLPATH = "~/Content/jugador/plugins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class dataTables {
                    private const string URLPATH = "~/Content/jugador/plugins/dataTables";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string dataTables_bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.bootstrap.min.css") ? Url("dataTables.bootstrap.min.css") : Url("dataTables.bootstrap.css");
                         
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class morris {
                    private const string URLPATH = "~/Content/jugador/plugins/morris";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string morris_0_4_3_min_css = Url("morris-0.4.3.min.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class social_buttons {
                    private const string URLPATH = "~/Content/jugador/plugins/social-buttons";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string social_buttons_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/social-buttons.min.css") ? Url("social-buttons.min.css") : Url("social-buttons.css");
                         
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class timeline {
                    private const string URLPATH = "~/Content/jugador/plugins/timeline";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string timeline_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/timeline.min.css") ? Url("timeline.min.css") : Url("timeline.css");
                         
                }
            
            }
        
            public static readonly string sb_admin_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sb-admin.min.css") ? Url("sb-admin.min.css") : Url("sb-admin.css");
                 
        }
    
        public static readonly string ng_grid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ng-grid.min.css") ? Url("ng-grid.min.css") : Url("ng-grid.css");
             
        public static readonly string ng_grid_min_css = Url("ng-grid.min.css");
        public static readonly string Site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Site.min.css") ? Url("Site.min.css") : Url("Site.css");
             
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class Scripts {}
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class Styles {}
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591


