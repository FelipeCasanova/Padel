@using Padel.Web.Mvc.Controllers.ViewModels.Menu;
@{
    Padel.Infrastructure.Utilities.PadelPrincipal user = null;
    MenuModelView MenuModelView = (MenuModelView)ViewBag.MenuModelView;

    DateTime tiempoTicksUsuario = DateTime.MinValue;
    DateTime tiempoTicksLimite = DateTime.MinValue;
    if (User.Identity.IsAuthenticated)
    {
        user = (Padel.Infrastructure.Utilities.PadelPrincipal)User;
        tiempoTicksUsuario = new DateTime(DateTime.Today.Ticks - user.FechaCreacion.Ticks);
        tiempoTicksLimite = user.FechaCreacion.AddMonths((int)ApplicationInstance.Application["NewUserLimitMonths"]);
    }
}
<script type="text/javascript">
    function NavBarCtrl($scope) {

        $scope.$on("userPoints", function (events, points) {
            $scope.points = points;
        });
    }
</script>
<div class="navbar-wrapper" ng-controller="NavBarCtrl">
    <div class="container">
        <nav class="navbar navbar-inverse" role="navigation">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                    <span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span><span
                        class="icon-bar"></span><span class="icon-bar"></span>
                </button>
                @(Html.ActionLink<HomeController>(m => m.Index(), "Padel", new { @class = "navbar-brand" }))
            </div>
            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <ul class="nav navbar-nav">
                    <li class="@(MenuModelView.TopMenu == TopMenu.Torneos ? "active" : "")">
                        @(Html.ActionLink<TorneosController>(m => m.Index(), "Torneos"))</li>
                    <li class="@(MenuModelView.TopMenu == TopMenu.Normas_Torneos ? "active" : "")">
                        @(Html.ActionLink<NormasController>(m => m.Index(), "Normas Torneos"))</li>
                    <li class="@(MenuModelView.TopMenu == TopMenu.Premios ? "active" : "")">
                        @(Html.ActionLink<PremiosController>(m => m.Index(), "Premios"))</li>
                    @*<li class="@(MenuModelView.TopMenu == TopMenu.Resultados ? "active" : "")">
                        @(Html.ActionLink<ResultadosController>(m => m.Index(), "Resultados"))</li>*@
                    <li class="@(MenuModelView.TopMenu == TopMenu.Galeria ? "active" : "")">
                        @(Html.ActionLink<GaleriasController>(m => m.Index(), "Galería"))</li>
                    <li class="@(MenuModelView.TopMenu == TopMenu.Contacto ? "active" : "")">
                        @(Html.ActionLink<ContactoController>(m => m.Index(), "Contacto"))</li>
                </ul>
                <ul class="nav navbar-nav navbar-right">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <li class="hidden till-loaded display-flex"><a href="#">@Html.DisplayFor(m => user.Puntos)</a>
                            <a href="#">@Html.DisplayFor(m => user.Corazones)</a> </li>
                        <li class="display-flex"><a href="#">@Html.DisplayFor(m => user.Experiencia)</a><a
                            href="#">@Html.DisplayFor(m => user.Nivel)</a></li>
                        <li class="dropdown"><a href="@(Url.Action(MVC.Jugador.ActionNames.Index, MVC.Jugador.Name))">
                            <span class="fa fa-bell fa-fw"></span>
                            @if (tiempoTicksLimite > tiempoTicksUsuario)
                            {
                                <span class="label label-info top-right">New</span>
                            }
                        </a></li>
                        <li class="dropdown"><a href="#" class="btn-lg" data-toggle="dropdown"><span class="glyphicon glyphicon-user">
                        </span>
                            @if (tiempoTicksLimite > tiempoTicksUsuario)
                            {
                                <span class="label label-info top-right">New</span>
                            }
                        </a>
                            <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1">
                                <li><a href="@(Url.Action(MVC.Jugador.ActionNames.Index, MVC.Jugador.Name))">@User.Identity.Name</a></li>
                                <li role="presentation" class="divider"></li>
                                <li role="presentation"><a role="menuitem" tabindex="-1" href="@(Url.Action(MVC.Jugador.ActionNames.Datos, MVC.Jugador.Name))">
                                    Tus Datos</a></li>
                                <li role="presentation"><a role="menuitem" tabindex="-1" href="@(Url.Action(MVC.Jugador.ActionNames.Equipos, MVC.Jugador.Name))">
                                    Tus Equipos</a></li>
                                <li role="presentation"><a role="menuitem" tabindex="-1" href="@(Url.Action(MVC.Jugador.ActionNames.Torneos, MVC.Jugador.Name))">
                                    Tus Torneos</a></li>
                                <li role="presentation"><a role="menuitem" tabindex="-1" href="@(Url.Action(MVC.Jugador.ActionNames.Partidos, MVC.Jugador.Name))">
                                    Tus Partidos</a></li>
                                @if (User.Identity.IsAuthenticated && User.IsInRole("Administrador"))
                                {
                                    <li role="presentation" class="divider"></li>
                                    <li role="presentation"><a role="menuitem" tabindex="-1" href="@(Url.Action(MVC.Admin.HomeAdmin.ActionNames.Index, MVC.Admin.HomeAdmin.Name, new { area = "Admin" }))">
                                        Administración</a></li>
                                }
                            </ul>
                        </li>
                    }
                    @if (!User.Identity.IsAuthenticated)
                    { 
                        <li><a href="#" data-toggle="modal" data-target="#entrarModal">Entra</a></li>
                        <li><a href="#" data-toggle="modal" data-target="#registroModal">Regístrate</a></li>
                    }
                    else
                    {
                        <li>@(Html.ActionLink<UsuariosController>(m => m.Logout(), "Salir"))</li>
                    }
                </ul>
            </div>
            <!-- /.navbar-collapse -->
        </nav>
    </div>
</div>
<!-- Modal -->
<div class="modal fade" id="entrarModal" tabindex="-1" role="dialog" aria-labelledby="entrarModalLabel"
    aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;</button>
                <h4 class="modal-title" id="entrarModalLabel">
                    Entra</h4>
            </div>
            @using (Ajax.BeginForm(MVC.Usuarios._Entrar(), new AjaxOptions
            {
                HttpMethod = "POST",
                InsertionMode = InsertionMode.Replace,
                OnComplete = "ajaxComplete",
                UpdateTargetId = "entrarView"
            }, new { @class = "" }))
            {
                <div class="modal-body">
                    <div class="row">
                        <div id="entrarView" class="form entrar col-md-8 padel-vertical-separator">
                            @Html.Partial(MVC.Shared.Views.Usuarios._Entrar, new Padel.Web.Mvc.Controllers.ViewModels.Usuarios.UsuarioEntrarModelView())
                        </div>
                        <div class="col-md-4">
                            <ul class="padel-list">
                                <li><span>Entra con tu email o numero de teléfono.</span></li>
                                <li><span>No dude en ponerse en contacto con nosotros si tiene alguna duda. Le contestaremos
                                    lo antes posible.</span></li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">
                        Cerrar</button>
                    <button type="submit" class="btn btn-primary" data-loading-text="Loading...">
                        Enviar</button>
                </div>
            }
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->
<!-- Modal -->
<div class="modal fade" id="registroModal" tabindex="-1" role="dialog" aria-labelledby="registroModalLabel"
    aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;</button>
                <h4 class="modal-title" id="registroModalLabel">
                    Regístrate</h4>
            </div>
            @using (Ajax.BeginForm(MVC.Usuarios._Registrar(), new AjaxOptions
            {
                HttpMethod = "POST",
                InsertionMode = InsertionMode.Replace,
                OnComplete = "ajaxRegistrationComplete",
                UpdateTargetId = "registroView"
            }, new { @class = "" }))
            {
                <div class="modal-body">
                    <div class="row">
                        <div id="registroView" class="form registrar col-md-8 padel-vertical-separator">
                            @Html.Partial(MVC.Shared.Views.Usuarios._Registrar, new Padel.Web.Mvc.Controllers.ViewModels.Usuarios.UsuarioRegistrarModelView())
                        </div>
                        <div class="col-md-4">
                            <ul class="padel-list">
                                <li><span>Crea equipo con algún amigo de forma ultrarápida.</span></li>
                                <li><span>Olvídate de buscar oponente.</span></li>
                                <li><span>Preocúpate de lo realmente importante. ¡Ganar el torneo ;-)!</span></li>
                            </ul>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="input-group" style="width: 100%;">
                                @Html.Raw(Html.GenerateCaptcha())
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">
                        Cerrar</button>
                    <button type="submit" class="btn btn-primary" data-loading-text="Loading...">
                        Enviar</button>
                </div>
            }
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->
