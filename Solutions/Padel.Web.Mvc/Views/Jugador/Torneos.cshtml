@{
    ViewBag.Title = "Torneos";
    Layout = @MVC.Shared.Views._LayoutPlayer;
}
@{
    var user = (Padel.Infrastructure.Utilities.PadelPrincipal)User;
}
@functions{
    public string GetAntiForgeryToken()
    {
        string cookieToken, formToken;
        AntiForgery.GetTokens(null, out cookieToken, out formToken);
        return cookieToken + ":" + formToken;
    }
}
@section JSSection{
    <script src="@Url.Content(@Links.Scripts.padel.jugador.torneos.crud_js)" type="text/javascript"></script>
    @foreach (var tipo in new[] { "Especial", "Estandar", "Mini", "Privado" })
    {
        <script type="text/javascript">

            function CrudTournaments@(tipo)Ctrl($rootScope, $scope, crudTournamentService) {
                $scope.emptyMessage = "No hay ningún torneo disponible";
                $scope.tournaments = [];
                $scope.show = false;

                $scope.$on("getTournamentsByType", function(events, tournaments){
                    $scope.tournaments = [];
                    angular.forEach(tournaments, function(t) {
                        if(t.Tipo == '@(tipo)')
                        {
                            if(t.JugadorAPagado || t.JugadorBPagado)
                            {
                                t.UnPagoHecho = true;
                            }
                            $scope.tournaments.push(t);
                            $scope.emptyMessage = "";
                            $scope.show = true;
                        }
                    });
                    
                });  

                $scope.refreshTournaments = function (type) {
                    crudTournamentService.getTournamentsByType(type, function (data) {
                        $scope.emptyMessage = "";
                        $scope.tournaments = data;
                        $scope.show = true;
                        angular.forEach(tournaments, function(t) {
                            if(t.JugadorAPagado || t.JugadorBPagado)
                            {
                                t.UnPagoHecho = true;
                            }
                        });
                    })
                };

                $scope.selectTournament = function (tournament) {
                    angular.forEach($scope.tournaments, function(t) {
                        t.selected = "";
                        t.showEdit = false;
                    });
                    tournament.selected = "selected";
                    tournament.showEdit = true;
                };

                $scope.unsignupFromTournament = function (teamCategoryId) {
                    crudTournamentService.antiForgeryToken = $scope.antiForgeryToken;
                    crudTournamentService.unsignupFromTournament(teamCategoryId, function(result){
                        
                        $scope.points = $scope.points + result.Precio;
                        $rootScope.$broadcast("userPoints", $scope.points);

                        angular.forEach($scope.tournaments, function(t) {
                            if(t.EquipoCategoriaId == teamCategoryId)
                            {
                                var index = $scope.tournaments.indexOf(t);
                                if (index > -1) {
                                    $scope.tournaments.splice(index, 1);
                                }
                            }
                        }); 
                    });
                };
                
                $scope.payTournamentWithPoints = function (tournament, type) {
                    crudTournamentService.antiForgeryToken = $scope.antiForgeryToken;
                    crudTournamentService.payTournamentWithPoints(tournament.EquipoCategoriaId, type, function(data){
                        if(type == 1)
                        {
                            if(tournament.JugadorAPagado || tournament.JugadorBPagado)
                            {
                                tournament.JugadorAPagado = true;
                                tournament.JugadorBPagado = true;
                            }
                            else
                            {
                                if(@(user.Id) == tournament.JugadorAId)
                                {
                                    tournament.JugadorAPagado = true;
                                }
                                if(@(user.Id) == tournament.JugadorBId)
                                {
                                    tournament.JugadorBPagado = true;
                                }
                            }
                        }
                        if(type == 2)
                        {
                            tournament.JugadorAPagado = true;
                            tournament.JugadorBPagado = true;
                        }
                        $scope.points = $scope.points - (tournament.Precio * type);
                        $rootScope.$broadcast("userPoints", $scope.points);
                    });
                };
            }
        </script>
    }
}
<div class="row" ng-controller="GetAllTournamentsCtrl">
    <div class="col-lg-12" ng-init="antiForgeryToken='@GetAntiForgeryToken()'">
        <h1 class="page-header">
            Tus Torneos</h1>
    </div>
    <!-- /.col-lg-12 -->
</div>
@foreach (var tipo in new[] { "Especial", "Estandar", "Mini", "Privado" })
{
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default @(tipo)" ng-controller="CrudTournaments@(tipo)Ctrl">
                <div class="panel-heading" ng-init="antiForgeryToken='@GetAntiForgeryToken()'">
                    <i class="fa fa-sitemap fa-fw"></i>Torneos - @(tipo)
                    <div class="pull-right">
                        <div class="btn-group">
                            <button type="button" class="btn
    btn-default btn-sm dropdown-toggle" data-toggle="dropdown">
                                Acciones <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu pull-right" role="menu">
                                <li><a href="" ng-click="refreshTournaments('@(tipo)')"><i class="fa fa-refresh fa-fw">
                                </i>Refrescar</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="panel-body hidden till-loaded">
                    {{emptyMessage}}
                    <div class="group" ng-show="show" ng-init="points='@user.Puntos.ToString().Replace(',', '.')'">
                        <ul class="group-list">
                            <li ng-repeat="tournament in tournaments" class="{{tournament.selected}}" ng-click="selectTournament(tournament)">
                                <span><i class="fa fa-sitemap fa-fw"></i>Torneo {{tournament.Nombre}} {{tournament.Tipo}}
                                    - {{tournament.CategoriaNombre}} {{tournament.TipoEquipo}}</span>
                                <div>
                                    <span class="fa-class">Torneo estado: {{tournament.EstadoCategoria}}, {{ tournament.NumeroEquipos
                                        }} equipo/s apuntados </span>
                                </div>
                                <div class="center">
                                    {{tournament.EquipoNombre != null ? 'Equipo - ' + tournament.EquipoNombre : '' }}
                                    <div>
                                        <span class="fa-class"><i class="fa fa-user"></i>{{tournament.JugadorANombre}} <i
                                            ng-show="tournament.JugadorAPagado && tournament.showEdit" class="ionicons ion-checkmark-circled">
                                        </i></span>
                                    </div>
                                    <div>
                                        <span class="fa-class"><i class="fa fa-user"></i>{{tournament.JugadorBNombre}} <i
                                            ng-show="tournament.JugadorBPagado && tournament.showEdit" class="ionicons ion-checkmark-circled">
                                        </i></span>
                                    </div>
                                    <div>
                                        <button class="btn btn-xs btn-primary" ng-disabled="tournament.Precio > puntos || (tournament.JugadorAPagado && tournament.JugadorBPagado)"
                                            ng-show="tournament.showEdit" ng-click="payTournamentWithPoints(tournament, 1)">
                                            Pagar / {{tournament.Precio}} puntos</button>
                                        <button class="btn btn-xs btn-primary" ng-disabled="(tournament.Precio * 2) > puntos || tournament.JugadorAPagado || tournament.JugadorBPagado"
                                            ng-show="tournament.showEdit" ng-click="payTournamentWithPoints(tournament, 2)">
                                            Pagar todo / {{tournament.Precio * 2}} puntos</button>
                                        <button class="btn btn-xs btn-danger" ng-click="unsignupFromTournament(tournament.EquipoCategoriaId)"
                                            ng-show="tournament.showEdit && tournament.EstadoCategoria == 'Pendiente'">
                                            Desapúntate</button>
                                    </div>
                                </div>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
