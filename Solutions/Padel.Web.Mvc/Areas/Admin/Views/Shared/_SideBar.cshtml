@{
    SideBarModelView SideBarModelView = ViewBag.SideBarModelView;
}

@helper RenderSideBarMenuItem(SideBarItem item)
    {
    <li class="@(item.SubMenu != null ? "has_sub" : "")">
    <a href="@item.Url" class="@(item.SubMenu != null && item.IsSelected ? "subdrop" : item.IsSelected ? "open" : "")">
    <i class="@item.Class">
    </i>
    <span>@(item.Name)</span>
        @if (item.SubMenu != null)
        {
            <span class="pull-right"><i class="@(item.IsSelected ? "fa fa-chevron-down" : "fa fa-chevron-left")"></i></span>
        }
    </a>
        @if (item.SubMenu != null)
        {
            <ul style="@(item.IsSelected ? "display: block;" : "")">
                @foreach (var subitem in item.SubMenu)
                {
                    @RenderSideBarMenuItem(subitem)
                }
            </ul>
        }
    </li>   
}

<div class="sidebar">
    <div class="sidebar-dropdown">
        <a href="#" class="open">Navigation</a></div>
    <!-- Search form -->
    <form class="navbar-form" role="search">
    <div class="form-group">
        <input type="text" class="form-control" placeholder="Search">
        <button class="btn search-button" type="submit">
            <i class="fa fa-search"></i>
        </button>
    </div>
    </form>
    <!--- Sidebar navigation -->
    <!-- If the main navigation has sub navigation, then add the class "has_sub" to "li" of main navigation. -->
    <ul id="nav" style="display: block;">
        <!-- Main menu with font awesome icon -->
        <li><a href="@(Url.Action(MVC.Admin.HomeAdmin.Actions.ActionNames.Index, MVC.Admin.HomeAdmin.Name))" class="@(SideBarModelView.Any(m => m.IsSelected) ? "" : "open")">
            <i class="fa fa-home"></i><span>Dashboard</span></a></li>
        @foreach (var item in SideBarModelView)
        {
            @RenderSideBarMenuItem(item);
        }
    </ul>
</div>
